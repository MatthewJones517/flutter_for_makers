// Mocks generated by Mockito 5.4.6 from annotations
// in flockinator/test/src/shared/firebase/application/firebase_functions_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flockinator/src/shared/firebase/data/firebase_functions_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FirebaseFunctionsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFunctionsRepository extends _i1.Mock
    implements _i2.FirebaseFunctionsRepository {
  MockFirebaseFunctionsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> deactivateElementByGuid(String? guid) =>
      (super.noSuchMethod(
            Invocation.method(#deactivateElementByGuid, [guid]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> activateElementByGuid(String? guid) =>
      (super.noSuchMethod(
            Invocation.method(#activateElementByGuid, [guid]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> checkElementActiveStatus(String? guid) =>
      (super.noSuchMethod(
            Invocation.method(#checkElementActiveStatus, [guid]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}
